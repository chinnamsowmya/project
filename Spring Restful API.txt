Product controller
----------------------

package com.itc.main.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;


import com.itc.main.model.Product;
import com.itc.main.service.ProductService;


@RestController
@RequestMapping("/api/")
public class ProductController {
	
	@Autowired
	 ProductService productService;
	
	
	@PostMapping("product")
	public ResponseEntity<Product> saveProduct(@RequestBody Product product ){
	 Product add_product=this.productService.saveProduct(product);
	 return new ResponseEntity<Product>(add_product,HttpStatus.CREATED);
}

	@GetMapping("products")
public ResponseEntity<List<Product>> getAllProducts(){
	List<Product> list=this.productService.getAllProducts();
	
	return new ResponseEntity<List<Product>>(list, HttpStatus.OK);
}
	@DeleteMapping("product/{id}")
	public ResponseEntity<String> deleteProductById(@PathVariable int id) {
		boolean b = this.productService.deleteProductById(id);
				if(b)
					return new ResponseEntity<String>("Successfully deleted", HttpStatus.OK);
				else
					return new ResponseEntity<String>("Not-found", HttpStatus.NOT_FOUND);
	}
	
	
	@GetMapping("product/{id}")
	public ResponseEntity getProductById(@PathVariable int id){
		Product product=this.productService.getProductById(id);
		if(product!=null) {
			return new ResponseEntity<Product>(product, HttpStatus.OK);
		}
			return new ResponseEntity<String>("Not-found", HttpStatus.NOT_FOUND);
	}
	
	@GetMapping("productname/{name}")
	public ResponseEntity getProductByName(@PathVariable String name) {
	Product product=this.productService.getProductByName(name);
	if(product!=null) {
		return new ResponseEntity<Product>(product,HttpStatus.OK);
}else
	return new ResponseEntity<String>("Not-found", HttpStatus.NOT_FOUND);
	}
	
	@PutMapping("product")
	  public ResponseEntity<Product> updateProduct(@RequestBody Product product) {
		Product list=this.productService.updateProduct(product);
		if(list!=null) {
			return new ResponseEntity<Product>(list,HttpStatus.OK);
	}else
		return new ResponseEntity<Product>( HttpStatus.NOT_FOUND);
	
	}
	@DeleteMapping("productname/{name}")
	public ResponseEntity deleteProductByName(@PathVariable String name) {
	boolean product=this.productService.deleteProductByName(name);
	if(product==true)
		return new ResponseEntity<String>("Successfully deleted", HttpStatus.OK);
	else
		return new ResponseEntity<String>("Not-found", HttpStatus.NOT_FOUND);
	}
	
}

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Product model
-------------------

package com.itc.main.model;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;


@Entity
public class Product {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int pid;
	private String pname;
	private double price;

	public Product() {

	}

	public int getPid() {
		return pid;
	}

	public void setPid(int pid) {
		this.pid = pid;
	}

	public String getPname() {
		return pname;
	}

	public void setPname(String pname) {
		this.pname = pname;
	}

	public double getPrice() {
		return price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

}
--------------------------------------------------------------------------------------------------------------------------------------------------------------

Product Repository
------------------------

package com.itc.main.repository;


import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.itc.main.model.Product;
@EnableJpaRepositories
@Repository
public interface ProductRepository extends JpaRepository<Product,Integer> {
	
//	custom method
	Product getProductByPname(String Pname);

	@Transactional
	@Modifying
	@Query("DELETE FROM Product WHERE pname=:pname")
	     Integer deleteProductBtName(String pname);
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------

Product Service
-------------------

package com.itc.main.service;

import java.util.List;

import com.itc.main.model.Product;

public interface ProductService {
	
//	 public Product saveProduct(Product product);
     public Product getProductById(int id);
     public List<Product> getAllProducts();
     public Product getProductByName(String productName);
     public Product updateProduct(Product product);//Update product price based on product id
     public boolean deleteProductById(int id);
     public boolean deleteProductByName(String pname);
	public Product saveProduct(Product product);

}
-----------------------------------------------------------------------------------------------------------------------------------------------------

Product ServiceImpl
-------------------------


package com.itc.main.service;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.itc.main.model.Product;
import com.itc.main.repository.ProductRepository;

@Service
public  class ProductServiceImpl implements ProductService {
	
	@Autowired
	ProductRepository productRepository;
	
	public Product saveProduct(Product product) {
		Product add_product= this.productRepository.save(product);
		return  add_product;
		
	}
	
	
	public List<Product> getAllProducts(){
		return this.productRepository.findAll();
		
	}
	
	
	public boolean deleteProductById(int id) {
		this.productRepository.deleteById(id);
		return true;
	}
	
	
	public Product getProductById(int id) {
		java.util.Optional<Product> op=this.productRepository.findById(id);
		if(op!=null) {
			return op.get();
		}else 
		return null;
	}
	
	
		public Product getProductByName(String pname) {
			Product product=this.productRepository.getProductByPname(pname);
			if(product!=null) {
				return product;
			}
			else
				return null;
			}


		
		public Product updateProduct(Product product) {
				if(this.productRepository.existsById(product.getPid())) {
					return this.productRepository.save(product);
					
				}else
					return null;
			}

		public boolean deleteProductByName(String pname) {
			this.productRepository.deleteProductBtName(pname);
			return true;
			
			
		}


		
		
}
---------------------------------------------------------------------------------------------------------------------------------------------------------

Application.properties
---------------------------


server.port=3001
# configure the database
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/springdb
spring.datasource.username=root
spring.datasource.password=Sowmya@123
#configure the hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
------------------------------------------------------------------------------------------------------------------------------------------------------